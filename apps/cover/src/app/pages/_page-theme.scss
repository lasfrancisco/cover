//@import '../../styles//variables';

$wm-content-top-desktop  : 64px !default;
$wm-content-top-mobile   : 56px !default;
$wm-content-padding      : 16px  !default;
$wm-content-margin       : 32px !default;

@mixin wm-adjust-top($offset: 0) {
  // Adapts the top padding according to the mat-toolbar height + offset  
  padding-top: $wm-content-top-desktop + $offset;
  @media ($mat-xsmall) { padding-top: $wm-content-top-mobile + $offset; }
}

@mixin wm-page-theme($theme, $props: ('color', 'background-color', 'border-color', 'stroke', 'fill')) {

  // Styles the theme colors globally
  @include wm-theme-colors($theme, $props);
 
  .wm-page { 
    
    display: block;
    position: relative;
    
    // Defines top padding helpers
    &.adjust-top, .adjust-top { @include wm-adjust-top(); }

    // Defines content padding helpers
    &.content-padding, .content-padding { 
      
      padding: $wm-content-padding; 
      &.adjust-top { @include wm-adjust-top($wm-content-padding); }
    }

    // Extends the wm-page including theme colors as well
    @extend .wm-theme-colors;
  }
}

@mixin wm-theme-colors($theme, $props) {

  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  .wm-theme-colors {

    // Styles the text color
    &.text-color, .text-color { color: map-get($foreground, text); }

    // Styles the background color
    &.background-color, .background-color { background-color: map-get($background, background); }

    // Styles the theme palettes
    @each $color in ('primary', 'accent', 'warn') {

      $palette: map-get($theme, #{$color});

      // Loops on each palette
      &[color=#{$color}], &.#{$color}, .#{$color} {

        // Styles a general selection 
        &[selected=true], [selected=true], &.selected, .selected { 
          border: 1px solid mat-color($palette);
          background-color: mat-color($palette, lighter, 0.5);          
        }

        // Loops on each palette's color tone
        @each $tone in ('default', 'lighter', 'darker') {

          // Styles the contrast color
          &.contrast-#{$tone}, .contrast-#{$tone} { color: map-get($palette, #{$tone}-contrast); }

          // Styles the desider properties each palette, each tone and the full hues
          @each $prop in $props {
        
            &.#{$prop}-#{$tone}, .#{$prop}-#{$tone} { #{$prop}: mat-color($palette, $tone); }

            // All palette hues
            @each $hue in (50, 100, 200, 300, 400, 500, 600, 700, 800, 900, A100, A200, A400, A700) {
              
              &.#{$prop}-#{$hue}, .#{$prop}-#{$hue} { #{$prop}: mat-color($palette, $hue); }
            }
          }
        }
      }
    }
  }
}